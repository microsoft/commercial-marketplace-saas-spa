// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Microsoft.Marketplace.Metering.Models
{
    public partial class UsageEventOkResponse
    {
        internal static UsageEventOkResponse DeserializeUsageEventOkResponse(JsonElement element)
        {
            Optional<Guid> usageEventId = default;
            Optional<UsageEventStatusEnum> status = default;
            Optional<DateTimeOffset> messageTime = default;
            Optional<Guid> resourceId = default;
            Optional<string> resourceUri = default;
            Optional<long> quantity = default;
            Optional<string> dimension = default;
            Optional<DateTimeOffset> effectiveStartTime = default;
            Optional<string> planId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("usageEventId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    usageEventId = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("status"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    status = property.Value.GetString().ToUsageEventStatusEnum();
                    continue;
                }
                if (property.NameEquals("messageTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    messageTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("resourceId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    resourceId = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("resourceUri"))
                {
                    resourceUri = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("quantity"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    quantity = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("dimension"))
                {
                    dimension = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("effectiveStartTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    effectiveStartTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("planId"))
                {
                    planId = property.Value.GetString();
                    continue;
                }
            }
            return new UsageEventOkResponse(Optional.ToNullable(usageEventId), Optional.ToNullable(status), Optional.ToNullable(messageTime), Optional.ToNullable(resourceId), resourceUri.Value, Optional.ToNullable(quantity), dimension.Value, Optional.ToNullable(effectiveStartTime), planId.Value);
        }
    }
}
